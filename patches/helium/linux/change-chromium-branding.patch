--- a/chrome/BUILD.gn
+++ b/chrome/BUILD.gn
@@ -1810,7 +1810,7 @@ if (is_linux || is_chromeos) {
     ]
     if (is_linux) {
       sources += [
-        "//chrome/app/theme/$branding_path_component/linux/product_logo_48.png",
+        "//chrome/app/theme/$branding_path_component/linux/product_logo_256.png",
       ]
     } else {
       sources +=
--- a/chrome/common/channel_info_posix.cc
+++ b/chrome/common/channel_info_posix.cc
@@ -81,18 +81,13 @@ std::string GetChannelName(WithExtendedS
 }
 
 std::string GetChannelSuffixForDataDir() {
-  switch (GetChannel()) {
-    case version_info::Channel::BETA:
-      return "-beta";
-    case version_info::Channel::DEV:
-      return "-unstable";
-    case version_info::Channel::CANARY:
-      return "-canary";
-    default:
+#if !defined(OFFICIAL_BUILD)
+  return ".dev";
+#else
       // Stable, extended stable, and unknown (e.g. in unbranded builds) don't
       // get a suffix.
       return std::string();
-  }
+#endif
 }
 
 #if BUILDFLAG(IS_LINUX)
@@ -148,11 +143,11 @@ std::string GetDesktopName(base::Environ
   // Allow $CHROME_DESKTOP to override the built-in value, so that development
   // versions can set themselves as the default without interfering with
   // non-official, packaged versions using the built-in value.
-  std::optional<std::string> name = env->GetVar("CHROME_DESKTOP");
+  std::optional<std::string> name = env->GetVar("HELIUM_DESKTOP");
   if (name.has_value() && !name.value().empty()) {
     return name.value();
   }
-  return "chromium-browser.desktop";
+  return "helium.desktop";
 #endif
 }
 #endif  // BUILDFLAG(IS_LINUX)
--- a/chrome/common/chrome_paths_linux.cc
+++ b/chrome/common/chrome_paths_linux.cc
@@ -81,7 +81,7 @@ bool GetDefaultUserDataDirectory(base::F
   std::unique_ptr<base::Environment> env(base::Environment::Create());
   base::FilePath config_dir;
   std::optional<std::string> chrome_config_home_str =
-      env->GetVar("CHROME_CONFIG_HOME");
+      env->GetVar("HELIUM_CONFIG_HOME");
   if (chrome_config_home_str.has_value() &&
       base::IsStringUTF8(chrome_config_home_str.value())) {
     config_dir = base::FilePath::FromUTF8Unsafe(chrome_config_home_str.value());
@@ -90,13 +90,7 @@ bool GetDefaultUserDataDirectory(base::F
         GetXDGDirectory(env.get(), kXdgConfigHomeEnvVar, kDotConfigDir);
   }
 
-#if BUILDFLAG(GOOGLE_CHROME_FOR_TESTING_BRANDING)
-  std::string data_dir_basename = "google-chrome-for-testing";
-#elif BUILDFLAG(GOOGLE_CHROME_BRANDING)
-  std::string data_dir_basename = "google-chrome";
-#else
-  std::string data_dir_basename = "chromium";
-#endif
+  std::string data_dir_basename = "net.imput.helium";
   *result = config_dir.Append(data_dir_basename + GetChannelSuffixForDataDir());
   return true;
 }
--- a/chrome/installer/linux/common/chromium-browser.info
+++ b/chrome/installer/linux/common/chromium-browser.info
@@ -6,7 +6,7 @@
 # chromium-browser packages for various platforms.
 
 # Base name of the package.
-PACKAGE="chromium-browser"
+PACKAGE="helium"
 
 # Filename of the main executable (for generating launcher scripts, etc.)
 PROGNAME=chrome
@@ -18,7 +18,7 @@ INSTALLDIR=/opt/chromium.org/chromium
 ENROLLMENTDIR=/etc/chromium/policies/enrollment
 
 # Display string for desktop menu/icon.
-MENUNAME="Chromium Web Browser"
+MENUNAME="Helium"
 
 # Brief package description.
 SHORTDESC="The web browser from the Chromium projects"
@@ -27,16 +27,16 @@ SHORTDESC="The web browser from the Chro
 FULLDESC="Chromium is a browser that combines a minimal design with sophisticated technology to make the web faster, safer, and easier."
 
 # Package maintainer information.
-MAINTNAME="Chromium Linux Team"
-MAINTMAIL="chromium-packagers@chromium.org"
-PRODUCTURL="https://www.chromium.org/Home"
+MAINTNAME="imput"
+MAINTMAIL="helium@imput.net"
+PRODUCTURL="https://helium.computer"
 
-PROJECT_LICENSE="BSD-3-Clause and LGPL-2.1+ and Apache-2.0 and IJG and MIT and GPL-2.0+ and ISC and OpenSSL and (MPL-1.1 or GPL-2.0 or LGPL-2.0)"
+PROJECT_LICENSE="GPL-3.0 and BSD-3-Clause and LGPL-2.1+ and Apache-2.0 and IJG and MIT and GPL-2.0+ and ISC and OpenSSL and (MPL-1.1 or GPL-2.0 or LGPL-2.0)"
 
-DEVELOPER_NAME="The Chromium Authors"
+DEVELOPER_NAME="The Helium Authors"
 
-BUGTRACKERURL="https://www.chromium.org/for-testers/bug-reporting-guidelines"
+BUGTRACKERURL="https://github.com/imputnet/helium-linux/issues"
 
-HELPURL="https://chromium.googlesource.com/chromium/src/+/main/docs/linux/debugging.md"
+HELPURL="https://helium.computer/"
 
-RDN="org.chromium.Chromium"
+RDN="net.imput.helium"
--- a/media/audio/pulse/pulse_util.cc
+++ b/media/audio/pulse/pulse_util.cc
@@ -39,8 +39,8 @@ namespace {
 constexpr char kBrowserDisplayName[] = "google-chrome";
 #define PRODUCT_STRING "Google Chrome"
 #else
-constexpr char kBrowserDisplayName[] = "chromium-browser";
-#define PRODUCT_STRING "Chromium"
+constexpr char kBrowserDisplayName[] = "helium";
+#define PRODUCT_STRING "Helium"
 #endif
 
 #if defined(DLOPEN_PULSEAUDIO)
